services:
    base:
        build:
            context: ../../
            dockerfile: apps/roomote/Dockerfile.base
        image: roomote-base

    db:
        container_name: roomote-db
        image: postgres:17.5
        ports:
            - "5433:5432"
        volumes:
            - ./.docker/postgres:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=password
            - POSTGRES_DB=cloud_agents
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres -d cloud_agents"]
            interval: 5s
            timeout: 5s
            retries: 5
            start_period: 30s

    redis:
        container_name: roomote-redis
        image: redis:7-alpine
        ports:
            - "6380:6379"
        volumes:
            - ./.docker/redis:/data
        command: redis-server --appendonly yes

    dashboard:
        container_name: roomote-dashboard
        build:
            context: ../../
            dockerfile: apps/roomote/Dockerfile.dashboard
        image: roomote-dashboard
        ports:
            - "3002:3002"
        environment:
            - REDIS_URL=redis://redis:6379
            - NODE_ENV=production
        depends_on:
            redis:
                condition: service_started

    api:
        container_name: roomote-api
        build:
            context: ../../
            dockerfile: apps/roomote/Dockerfile.api
        image: roomote-api
        ports:
            - "3001:3001"
        environment:
            - DATABASE_URL=postgresql://postgres:password@db:5432/cloud_agents
            - REDIS_URL=redis://redis:6379
            - NODE_ENV=production
        volumes:
            - /run/user/1000/docker.sock:/var/run/docker.sock
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_started

    controller:
        container_name: roomote-controller
        build:
            context: ../../
            dockerfile: apps/roomote/Dockerfile.controller
            args:
                - GH_TOKEN=${GH_TOKEN}
        image: roomote-controller
        env_file:
            - .env
        environment:
            - HOST_EXECUTION_METHOD=docker
            - DATABASE_URL=postgresql://postgres:password@db:5432/cloud_agents
            - REDIS_URL=redis://redis:6379
            - NODE_ENV=production
        volumes:
            - /run/user/1000/docker.sock:/var/run/docker.sock
            - /tmp/roomote:/var/log/roomote
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_started
        restart: unless-stopped

    worker:
        build:
            context: ../../
            dockerfile: apps/roomote/Dockerfile.worker
            args:
                - GH_TOKEN=${GH_TOKEN}
        image: roomote-worker
        env_file:
            - .env
        environment:
            - HOST_EXECUTION_METHOD=docker
            - DATABASE_URL=postgresql://postgres:password@db:5432/cloud_agents
            - REDIS_URL=redis://redis:6379
            - NODE_ENV=production
        volumes:
            - /run/user/1000/docker.sock:/var/run/docker.sock
            - /tmp/roomote:/var/log/roomote
        stdin_open: true
        tty: true
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_started

networks:
    default:
        name: roomote_default
        driver: bridge
